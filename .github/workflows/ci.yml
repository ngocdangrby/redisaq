name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [ created ]  # Trigger khi tạo release mới (tag)

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Adjust based on pyproject.toml

      - name: Install Poetry
        run: |
          pip install poetry==1.8.5
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry install

#      - name: Run mypy (static type checking)
#        run: poetry run mypy .

      - name: Run unit tests with coverage
        run: |
          poetry run pytest tests/* --asyncio-mode=auto --cov=redisaq


  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Poetry
        run: |
          pip install poetry==1.8.5
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry publish --build --no-interaction